version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: mec-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mec_dashboard
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mec-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: mec-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: mec_dashboard
      DB_USER: postgres
      DB_PASSWORD: postgres
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      JWT_EXPIRES_IN: 7d
      MEC_API_URL: ${MEC_API_URL:-https://housesoflight.org/wp-json/mec/v1.0}
      CLIENT_URL: ${CLIENT_URL:-http://localhost:5173}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_SECURE: ${SMTP_SECURE:-false}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      EMAIL_FROM: ${EMAIL_FROM}
      ORG_NAME: ${ORG_NAME:-Houses of Light}
      SYNC_CRON_SCHEDULE: ${SYNC_CRON_SCHEDULE:-0 */3 * * *}
      REMINDER_CRON_SCHEDULE: ${REMINDER_CRON_SCHEDULE:-0 9 * * *}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - mec-network
    volumes:
      - ./backend:/app
      - /app/node_modules

  # Frontend (Optional - for production)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: mec-frontend
    restart: unless-stopped
    ports:
      - "5173:80"
    environment:
      VITE_API_URL: http://localhost:5000/api
    depends_on:
      - backend
    networks:
      - mec-network

volumes:
  postgres_data:
    driver: local

networks:
  mec-network:
    driver: bridge

